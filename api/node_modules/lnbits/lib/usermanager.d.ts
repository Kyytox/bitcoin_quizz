import { AxiosResponse } from 'axios';
interface LNBitsConfig {
    adminKey: string;
    invoiceReadKey: string;
    endpoint?: string;
}
interface Users {
    admin: string;
    email: string;
    id: string;
    name: string;
    password: string;
}
export declare class LNBitsUserManagerClass {
    private invoiceReadKey;
    private endpoint;
    private api;
    constructor(params: LNBitsConfig);
    getUsers: () => Promise<Users[]>;
    getWallets: (params?: {
        user_id?: string | undefined;
    } | undefined) => Promise<Users[]>;
    getTransactions: (params: {
        wallet_id: string;
    }) => Promise<Users[]>;
    createUser: (params: {
        admin_id: string;
        user_name: string;
        wallet_name: string;
    }) => Promise<Users[]>;
    deleteUser: (params: {
        user_id: string;
    }) => Promise<boolean>;
    deleteWallet: (params: {
        wallet_id: string;
    }) => Promise<boolean>;
    activeExtension: (params: {
        userid: string;
        extension: string;
        active: boolean;
    }) => Promise<AxiosResponse>;
}
export {};
