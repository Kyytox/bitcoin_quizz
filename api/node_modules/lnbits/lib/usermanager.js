"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LNBitsUserManagerClass = void 0;
const axios_1 = require("axios");
class LNBitsUserManagerClass {
    constructor(params) {
        this.invoiceReadKey = '';
        this.endpoint = 'https://lnbits.com';
        this.getUsers = () => __awaiter(this, void 0, void 0, function* () {
            this.api.defaults.headers['X-Api-Key'] = this.invoiceReadKey;
            return yield this.api
                .get(`/users`)
                .then((res) => {
                return res.data;
            })
                .catch((err) => {
                throw err;
            });
        });
        this.getWallets = (params) => __awaiter(this, void 0, void 0, function* () {
            this.api.defaults.headers['X-Api-Key'] = this.invoiceReadKey;
            let url = `/wallets`;
            if (params) {
                url = `/wallets/${params.user_id}`;
            }
            return yield this.api
                .get(url)
                .then((res) => {
                return res.data;
            })
                .catch((err) => {
                throw err;
            });
        });
        this.getTransactions = (params) => __awaiter(this, void 0, void 0, function* () {
            this.api.defaults.headers['X-Api-Key'] = this.invoiceReadKey;
            return yield this.api
                .get(`/wallets/${params.wallet_id}`)
                .then((res) => {
                return res.data;
            })
                .catch((err) => {
                throw err;
            });
        });
        this.createUser = (params) => __awaiter(this, void 0, void 0, function* () {
            this.api.defaults.headers['X-Api-Key'] = this.invoiceReadKey;
            return yield this.api
                .post(`/users`, params)
                .then((res) => {
                return res.data;
            })
                .catch((err) => {
                throw err.response.data.message;
            });
        });
        this.deleteUser = (params) => __awaiter(this, void 0, void 0, function* () {
            this.api.defaults.headers['X-Api-Key'] = this.invoiceReadKey;
            return yield this.api
                .delete(`/users/${params.user_id}`)
                .then(() => {
                return true;
            })
                .catch(() => {
                return false;
            });
        });
        this.deleteWallet = (params) => __awaiter(this, void 0, void 0, function* () {
            this.api.defaults.headers['X-Api-Key'] = this.invoiceReadKey;
            return yield this.api
                .delete(`/wallets/${params.wallet_id}`)
                .then(() => {
                return true;
            })
                .catch(() => {
                return false;
            });
        });
        this.activeExtension = (params) => __awaiter(this, void 0, void 0, function* () {
            this.api.defaults.headers['X-Api-Key'] = this.invoiceReadKey;
            return yield this.api
                .post(`/extensions`, params)
                .then((res) => {
                return res.data;
            })
                .catch((err) => {
                throw err;
            });
        });
        this.invoiceReadKey = params.invoiceReadKey;
        this.endpoint = params.endpoint || this.endpoint;
        this.api = axios_1.default.create({
            baseURL: `${this.endpoint}/usermanager/api/v1`,
            headers: {
                'Content-Type': 'application/json',
            },
        });
    }
}
exports.LNBitsUserManagerClass = LNBitsUserManagerClass;
